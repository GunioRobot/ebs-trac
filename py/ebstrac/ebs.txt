Unit tests for the ebs.py module.

The method that computes the graph statistics takes three arguments:

	* history, a list of (user, ticket, estimated_hours, actual_hours,
	  velocity) tuples.  Note that velocity is estimate / actual.

		>>> history = (
		... ('mark', 1, 1.0, 2.0, 0.5), 
		... )

	* todo, a list of (user, ticket, estimated_hours, actual_hours)
	  tuples.

		>>> todo = (
		... ('mark', 2, 2.0, 1,0),
		... )

	* timecards, a list of (user, date, total_hours) tuples, with
	  one entry for each unique user/date combination.

			   September 2010   
			Su Mo Tu We Th Fr Sa
				  1  2  3  4
			 5  6  7  8  9 10 11
			12 13 14 15 16 17 18
			19 20 21 22 23 24 25
			26 27 28 29 30      

		>>> from datetime import date
		>>> dt1 = date(2010, 9, 1)
		>>> timecards = (
		... ('mark', dt1, 1.0),
		... )

This is a very simple example, with 

	* one user,
	* no difference between the historical estimate and the actual,
	* a task with one hour left on it, and
	* a user that works one hour per day (based on timecards)

In this case, the probability density function data should have a single
point---it is 100% likely that this milestone will be done in a day.

	>>> from ebs import history_to_plotdata
	>>> pdf, devs = history_to_plotdata(history, todo, timecards)
	>>> len(pdf)
	1

The x-coordinate will be the expected ship date, and the y-coordinate
is the probability that the ship date will be on or less than that date.

For this toy, example, the one point has a y-value of 100.

	>>> x, y = pdf[0]
	>>> y
	100

Checking the x-coordinate is a bit trickier, we'll use one of the workday
utilities in the ebs module to help us.
	
	>>> import ebs
	>>> d = ebs.advance_n_workdays(date.today(), 1)
	>>> x - d
	datetime.timedelta(0)
